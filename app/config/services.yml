services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false


    # ---------------------------------------------------------
    # Register all controllers of AppBundle as services
    # ---------------------------------------------------------
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']



    # ---------------------------------------------------------
    # Register all commands of AppBundle as commands
    # ---------------------------------------------------------
    AppBundle\Command\:
        resource: '../../src/AppBundle/Command'
        tags: ['console.command']



    # ---------------------------------------------------------
    # Forms
    # ---------------------------------------------------------
    AppBundle\Form\DeliveryAddressFormType: ~
    AppBundle\Form\LoginFormType: ~
    AppBundle\Form\RegistrationFormType: ~
    AppBundle\Form\RegistrationFormHandler: ~
    AppBundle\Form\CarSubmitFormType: ~



    # ---------------------------------------------------------
    # Misc Services
    # ---------------------------------------------------------
    AppBundle\Services\PasswordRecoveryService: ~
    AppBundle\Services\NewsletterDoubleOptInService: ~
    AppBundle\Services\SegmentTrackingHelperService: ~
    AppBundle\Website\Navigation\BreadcrumbHelperService: ~

    AppBundle\Model\Product\CalculatedValue\QualityCalculator:
        public: true

    AppBundle\Model\Product\CalculatedValue\AccessoryPartName:
        public: true


    # ---------------------------------------------------------
    # Twig Extensions
    # ---------------------------------------------------------
    AppBundle\Twig\Extension\CategoryFilterExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\Country:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\Currency:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\GeneralFilterExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\NavigationExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\UniqidExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\LanguageSwitcherExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\ProductPageExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\NewsExtension:
        tags: ['twig.extension']

    AppBundle\Twig\Extension\PrintCatalogExtension:
        tags: ['twig.extension']


    # ---------------------------------------------------------
    # Link Generators for DataObjects
    # ---------------------------------------------------------
    AppBundle\Website\LinkGenerator\CategoryLinkGenerator:
        public: true

    AppBundle\Website\LinkGenerator\ProductLinkGenerator:
        public: true

    AppBundle\Website\LinkGenerator\NewsLinkGenerator:
        public: true



    # ---------------------------------------------------------
    # Overwrite Pimcore Default Services
    # ---------------------------------------------------------

    # overwrite PimcoreUrl helper to add existing parameters to generated urls
    Pimcore\Templating\Helper\PimcoreUrl:
        class: AppBundle\Website\Tool\PimcoreUrl
        arguments:
            $generator: '@router'
        tags:
            - { name: templating.helper, alias: pimcoreUrl }



    # ---------------------------------------------------------
    # Event Listeners
    # ---------------------------------------------------------

    # auto sets name based on key for bodystyle, manufacturer, category
    AppBundle\EventListener\NameSettingListener:
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.preAdd, method: onPreAdd }

    # adds additional static files to admin backend
    AppBundle\EventListener\PimcoreAdminListener:
        tags:
            - { name: kernel.event_listener, event: pimcore.bundle_manager.paths.css, method: addCSSFiles }
            - { name: kernel.event_listener, event: pimcore.bundle_manager.paths.js, method: addJSFiles }

    # checkout listeners for ecommerce application
    AppBundle\EventListener\CheckoutEventListener:
        tags:
            - { name: kernel.event_listener, event: pimcore.ecommerce.ordermanager.postUpdateOrder, method: onUpdateOrder }
            - { name: kernel.event_listener, event: pimcore.ecommerce.commitorderprocessor.sendConfirmationMails, method: sendConfirmationMail }
            - { name: kernel.event_listener, event: pimcore.ecommerce.commitorderprocessor.postCommitOrder, method: postCommitOrder }

    # authentication login listener for updating e-commerce framework environment after login
    AppBundle\EventListener\AuthenticationLoginListener:
        arguments:
            $httpUtils: '@security.http_utils'

    # authentication login listener for updating e-commerce framework environment after logout
    AppBundle\EventListener\AuthenticationLogoutListener:
        arguments:
            $httpUtils: '@security.http_utils'






    # ---------------------------------------------------------
    # Workflow
    # ---------------------------------------------------------
    AppBundle\Workflow\SupportsStrategy: ~

